{"ast":null,"code":"import _slicedToArray from \"/Users/mohamedbadreldin/Desktop/id_card_detection copy/object-detection-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mohamedbadreldin/Desktop/id_card_detection copy/object-detection-react/src/index.js\";\nimport React, { useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport useWebcam from './useWebcam';\nimport useModel from './useModel';\nimport useBoxRenderer from './useBoxRenderer';\nimport axios from 'axios';\nimport styles from './styles.module.css';\nvar MODEL_PATH = process.env.PUBLIC_URL + '/model_web';\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fullID = _useState6[0],\n      setFullID = _useState6[1]; //const [loadingName, setLoadingName] = useState(false);\n\n\n  var loadingName = 0;\n  var videoRef = useRef();\n  var canvasRef = useRef();\n  var cameraLoaded = useWebcam(videoRef);\n  var model = useModel(MODEL_PATH);\n\n  var onNameReset = function onNameReset() {\n    //setData({ ...data, fullName: '' });\n    loadingName = 0; // if (data.fullName == '') alert('full name is empty');\n    // else alert('full name is NOT')\n  };\n\n  var onFullIDReset = function onFullIDReset() {// setData({ ...data, fullID: '' });\n  };\n\n  var onAddressReset = function onAddressReset() {// setData({ ...data, address: '' });\n  };\n\n  var trigger = function trigger(img, name) {\n    console.log(name + ' AND ' + loadingName);\n    var imgString = String(img);\n    console.log(name);\n\n    if (name == 'Name' && loadingName == 0) {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then(function (result) {\n        //console.log('RECIEVED MSG');\n        //console.log(result);\n        if (result.data) {\n          loadingName = 1; //console.log(result.data)\n\n          setFullName(result.data); //alert('Changed name to ' + result.data + ' and loading is ' + loadingName);\n        }\n      }).catch(function (error) {//console.log('ERROR ' + error);\n      });\n    } else if (name == 'Address') {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then(function (result) {\n        // console.log('RECIEVED MSG');\n        // console.log(result);\n        if (result.data) {\n          setAddress(result.data);\n        }\n      }).catch(function (error) {// console.log('ERROR ' + error);\n      });\n    } else if (name == 'FullID') {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then(function (result) {\n        // console.log('RECIEVED MSG');\n        // console.log(result);\n        if (result.data) {\n          console.log(result.data);\n        }\n      }).catch(function (error) {// console.log('ERROR ' + error);\n      });\n    }\n  }; //console.log(obj);\n\n\n  var onNameChange = function onNameChange(event) {\n    setFullName(event.target.value);\n  };\n\n  var onAddressChange = function onAddressChange(event) {\n    setAddress(event.target.value);\n  };\n\n  var onFullIDChange = function onFullIDChange(event) {\n    setFullID(event.target.value);\n  };\n\n  var onCaptureClick = function onCaptureClick() {\n    // var canvas = document.getElementById('canvastest');\n    // canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    // console.log(canvas.toDataURL('image/png'));\n    var canvas = document.createElement('canvas');\n    canvas.width = 600;\n    canvas.height = 450;\n    var ctx = canvas.getContext('2d'); //draw image to canvas. scale to target dimensions\n\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height); //convert to desired file format\n\n    var dataURI = canvas.toDataURL('image/jpeg'); // can also use 'image/png'\n\n    console.log(dataURI);\n  };\n\n  useBoxRenderer(model, videoRef, canvasRef, cameraLoaded, trigger);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    ref: videoRef,\n    width: \"600\",\n    height: \"450\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"canvas\", {\n    id: \"canvastest\",\n    style: {\n      'position': 'fixed',\n      'top': 0,\n      'left': 0\n    },\n    ref: canvasRef,\n    width: \"600\",\n    height: \"450\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      marginRight: 10,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Full Name:\"), React.createElement(\"input\", {\n    onChange: onNameChange,\n    value: fullName,\n    dir: \"rtl\",\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5,\n      width: 300,\n      fontSize: 20\n    },\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onClick: onNameReset,\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    value: \"Clear\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      marginRight: 10,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Address:\"), React.createElement(\"input\", {\n    onChange: onAddressChange,\n    value: address,\n    dir: \"rtl\",\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5,\n      width: 300,\n      fontSize: 20\n    },\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onClick: onAddressReset,\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    value: \"Clear\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      marginRight: 10,\n      fontSize: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"ID Number:\"), React.createElement(\"input\", {\n    onChange: onFullIDChange,\n    value: fullID,\n    dir: \"rtl\",\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5,\n      width: 300,\n      fontSize: 20\n    },\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onClick: onFullIDReset,\n    style: {\n      paddingTop: 5,\n      paddingBottom: 5\n    },\n    value: \"Clear\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    id: \"photoDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })));\n};\n\nvar rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/mohamedbadreldin/Desktop/id_card_detection copy/object-detection-react/src/index.js"],"names":["React","useRef","useState","ReactDOM","useWebcam","useModel","useBoxRenderer","axios","styles","MODEL_PATH","process","env","PUBLIC_URL","App","fullName","setFullName","address","setAddress","fullID","setFullID","loadingName","videoRef","canvasRef","cameraLoaded","model","onNameReset","onFullIDReset","onAddressReset","trigger","img","name","console","log","imgString","String","get","substring","length","then","result","data","catch","error","onNameChange","event","target","value","onAddressChange","onFullIDChange","onCaptureClick","canvas","document","createElement","width","height","ctx","getContext","drawImage","current","dataURI","toDataURL","display","flexDirection","padding","marginRight","fontSize","paddingTop","paddingBottom","rootElement","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport useWebcam from './useWebcam'\nimport useModel from './useModel'\nimport useBoxRenderer from './useBoxRenderer'\nimport axios from 'axios';\n\nimport styles from './styles.module.css'\n\nconst MODEL_PATH = process.env.PUBLIC_URL + '/model_web'\n\nconst App = () => {\n  const [fullName, setFullName] = useState('');\n  const [address, setAddress] = useState('');\n  const [fullID, setFullID] = useState('');\n\n  //const [loadingName, setLoadingName] = useState(false);\n  var loadingName = 0;\n  const videoRef = useRef()\n  const canvasRef = useRef()\n\n  const cameraLoaded = useWebcam(videoRef)\n  const model = useModel(MODEL_PATH)\n\n  const onNameReset = () => {\n    //setData({ ...data, fullName: '' });\n    loadingName = 0;\n    // if (data.fullName == '') alert('full name is empty');\n    // else alert('full name is NOT')\n  }\n\n  const onFullIDReset = () => {\n   // setData({ ...data, fullID: '' });\n  }\n\n  const onAddressReset = () => {\n   // setData({ ...data, address: '' });\n  }\n\n  const trigger = (img, name) => {\n    console.log(name + ' AND ' + loadingName);\n    var imgString = String(img);\n    console.log(name);\n    if (name == 'Name' && loadingName == 0) {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then((result) => {\n        //console.log('RECIEVED MSG');\n        //console.log(result);\n        if (result.data) {\n          loadingName = 1;\n          //console.log(result.data)\n\n          setFullName(result.data);\n          //alert('Changed name to ' + result.data + ' and loading is ' + loadingName);\n        }\n      }).catch((error) => {\n        //console.log('ERROR ' + error);\n      });\n    }\n    else if (name == 'Address') {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then((result) => {\n        // console.log('RECIEVED MSG');\n        // console.log(result);\n        if (result.data) {\n          setAddress(result.data);\n        }\n      }).catch((error) => {\n        // console.log('ERROR ' + error);\n      });\n    }\n    else if (name == 'FullID') {\n      axios.get('http://localhost:8080?image=' + imgString.substring(23, imgString.length) + '&' + 'name=' + name).then((result) => {\n        // console.log('RECIEVED MSG');\n        // console.log(result);\n        if (result.data) {\n          console.log(result.data);\n        }\n      }).catch((error) => {\n        // console.log('ERROR ' + error);\n      });\n    }\n  }\n\n  //console.log(obj);\n\n\n  const onNameChange = (event) => {\n    setFullName(event.target.value);\n  }\n\n  const onAddressChange = (event) => {\n    setAddress(event.target.value);\n  }\n\n  const onFullIDChange = (event) => {\n    setFullID(event.target.value);\n  }\n\n  const onCaptureClick = () => {\n    // var canvas = document.getElementById('canvastest');\n    // canvas.getContext('2d').drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    // console.log(canvas.toDataURL('image/png'));\n    var canvas = document.createElement('canvas');\n    canvas.width = 600;\n    canvas.height = 450;\n    var ctx = canvas.getContext('2d');\n    //draw image to canvas. scale to target dimensions\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n\n    //convert to desired file format\n    var dataURI = canvas.toDataURL('image/jpeg'); // can also use 'image/png'\n    console.log(dataURI);\n  }\n\n  useBoxRenderer(model, videoRef, canvasRef, cameraLoaded, trigger)\n\n  return (\n    <>\n      <div>\n        <video\n          autoPlay\n          playsInline\n          muted\n          ref={videoRef}\n          width=\"600\"\n          height=\"450\"\n        />\n        <canvas\n          id=\"canvastest\"\n          style={{ 'position': 'fixed', 'top': 0, 'left': 0 }}\n          ref={canvasRef}\n          width=\"600\"\n          height=\"450\"\n        />\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <div>\n          <div style={{ padding: 10 }}>\n            <label style={{ marginRight: 10, fontSize: 20 }}>Full Name:</label>\n            <input onChange={onNameChange} value={fullName} dir=\"rtl\" style={{ paddingTop: 5, paddingBottom: 5, width: 300, fontSize: 20 }} type=\"text\"></input>\n            <input onClick={onNameReset} style={{ paddingTop: 5, paddingBottom: 5 }} value=\"Clear\" type=\"button\" />\n          </div>\n          <div style={{ padding: 10 }}>\n            <label style={{ marginRight: 10, fontSize: 20 }}>Address:</label>\n            <input onChange={onAddressChange} value={address} dir=\"rtl\" style={{ paddingTop: 5, paddingBottom: 5, width: 300, fontSize: 20 }} type=\"text\"></input>\n            <input onClick={onAddressReset} style={{ paddingTop: 5, paddingBottom: 5 }} value=\"Clear\" type=\"button\" />\n          </div>\n          <div style={{ padding: 10 }}>\n            <label style={{ marginRight: 10, fontSize: 20 }}>ID Number:</label>\n            <input onChange={onFullIDChange} value={fullID} dir=\"rtl\" style={{ paddingTop: 5, paddingBottom: 5, width: 300, fontSize: 20 }} type=\"text\"></input>\n            <input onClick={onFullIDReset} style={{ paddingTop: 5, paddingBottom: 5 }} value=\"Clear\" type=\"button\" />\n          </div>\n        </div>\n        <div id='photoDiv'>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"]},"metadata":{},"sourceType":"module"}