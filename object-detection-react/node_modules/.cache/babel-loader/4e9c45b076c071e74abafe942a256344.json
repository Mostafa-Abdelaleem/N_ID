{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mostafa/Downloads/id_card_detection copy/object-detection-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mostafa/Downloads/id_card_detection copy/object-detection-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect } from 'react';\nvar SCORE_DIGITS = 4;\n\nvar getLabelText = function getLabelText(prediction) {\n  var scoreText = prediction.score.toFixed(SCORE_DIGITS);\n  return prediction.class + ', score: ' + scoreText;\n};\n\nvar renderPredictions = function renderPredictions(predictions, canvasRef, videoRef, trig) {\n  var ctx = canvasRef.current.getContext('2d');\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Font options.\n\n  var font = '16px sans-serif';\n  ctx.font = font;\n  ctx.textBaseline = 'top';\n  predictions.forEach(function (prediction) {\n    var x = prediction.bbox[0];\n    var y = prediction.bbox[1];\n    var width = prediction.bbox[2];\n    var height = prediction.bbox[3]; // Draw the bounding box.\n\n    ctx.strokeStyle = '#00FFFF';\n    ctx.lineWidth = 4;\n    ctx.strokeRect(x, y, width, height); // Draw the label background.\n\n    ctx.fillStyle = '#00FFFF';\n    var textWidth = ctx.measureText(getLabelText(prediction)).width;\n    var textHeight = parseInt(font, 10); // base 10\n\n    ctx.fillRect(x, y, textWidth + 4, textHeight + 4);\n  });\n  predictions.forEach(function (prediction) {\n    var x = prediction.bbox[0];\n    var y = prediction.bbox[1]; // Draw the text last to ensure it's on top.\n\n    ctx.fillStyle = '#000000';\n    ctx.fillText(getLabelText(prediction), x, y);\n  });\n  var obj = [];\n  predictions.forEach(function (prediction) {\n    var imageObj = {\n      'x': prediction.bbox[0],\n      'y': prediction.bbox[1],\n      'width': prediction.bbox[2],\n      'height': prediction.bbox[3],\n      'text': getLabelText(prediction)\n    };\n    var canvas = document.createElement('canvas');\n    canvas.width = 600;\n    canvas.height = 450;\n    var ctx = canvas.getContext('2d'); //draw image to canvas. scale to target dimensions\n\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    var imageData = ctx.getImageData(imageObj.x, imageObj.y, imageObj.width, imageObj.height);\n    var canvas1 = document.createElement(\"canvas\");\n    canvas1.width = imageObj.width;\n    canvas1.height = imageObj.height;\n    var ctx1 = canvas1.getContext(\"2d\");\n    ctx1.rect(0, 0, imageObj.width, imageObj.height);\n    ctx1.fillStyle = 'white';\n    ctx1.fill();\n    ctx1.putImageData(imageData, 0, 0); //convert to desired file format\n\n    var dataURI = canvas1.toDataURL('image/jpeg'); // can also use 'image/png'\n\n    console.log(dataURI);\n\n    if (String(imageObj.text).split(',')[0] == 'Face') {\n      var div = document.getElementById('photoDiv');\n      var oldpic = div.firstChild;\n\n      if (oldpic) {\n        oldpic.replaceWith(canvas1);\n      } else {\n        div.appendChild(canvas1);\n      }\n    }\n\n    obj.push(imageObj);\n    trig(dataURI, String(imageObj.text).split(',')[0]);\n  }); //trig(obj);\n};\n\nvar detectFrame =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(model, videoRef, canvasRef, trig) {\n    var predictions;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return model.detect(videoRef.current);\n\n          case 2:\n            predictions = _context.sent;\n            //console.log(videoRef);\n            renderPredictions(predictions, canvasRef, videoRef, trig);\n            requestAnimationFrame(function () {\n              detectFrame(model, videoRef, canvasRef, trig);\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function detectFrame(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar useBoxRenderer = function useBoxRenderer(model, videoRef, canvasRef, shouldRender, trig) {\n  useEffect(function () {\n    if (model && shouldRender) {\n      detectFrame(model, videoRef, canvasRef, trig);\n    }\n  }, [canvasRef, model, shouldRender, videoRef]);\n};\n\nexport default useBoxRenderer;","map":{"version":3,"sources":["/Users/mostafa/Downloads/id_card_detection copy/object-detection-react/src/useBoxRenderer.js"],"names":["useEffect","SCORE_DIGITS","getLabelText","prediction","scoreText","score","toFixed","class","renderPredictions","predictions","canvasRef","videoRef","trig","ctx","current","getContext","clearRect","canvas","width","height","font","textBaseline","forEach","x","bbox","y","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","parseInt","fillRect","fillText","obj","imageObj","document","createElement","drawImage","imageData","getImageData","canvas1","ctx1","rect","fill","putImageData","dataURI","toDataURL","console","log","String","text","split","div","getElementById","oldpic","firstChild","replaceWith","appendChild","push","detectFrame","model","detect","requestAnimationFrame","useBoxRenderer","shouldRender"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\n\nconst SCORE_DIGITS = 4\n\nconst getLabelText = (prediction) => {\n  const scoreText = prediction.score.toFixed(SCORE_DIGITS)\n  return prediction.class + ', score: ' + scoreText\n}\n\nconst renderPredictions = (predictions, canvasRef, videoRef, trig) => {\n  const ctx = canvasRef.current.getContext('2d')\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n  // Font options.\n  const font = '16px sans-serif'\n  ctx.font = font\n  ctx.textBaseline = 'top'\n  predictions.forEach(prediction => {\n    const x = prediction.bbox[0]\n    const y = prediction.bbox[1]\n    const width = prediction.bbox[2]\n    const height = prediction.bbox[3]\n    // Draw the bounding box.\n    ctx.strokeStyle = '#00FFFF'\n    ctx.lineWidth = 4\n    ctx.strokeRect(x, y, width, height)\n    // Draw the label background.\n    ctx.fillStyle = '#00FFFF'\n    const textWidth = ctx.measureText(getLabelText(prediction)).width\n    const textHeight = parseInt(font, 10) // base 10\n    ctx.fillRect(x, y, textWidth + 4, textHeight + 4)\n  })\n\n  predictions.forEach(prediction => {\n    const x = prediction.bbox[0]\n    const y = prediction.bbox[1]\n    // Draw the text last to ensure it's on top.\n    ctx.fillStyle = '#000000'\n    ctx.fillText(getLabelText(prediction), x, y)\n  })\n\n  var obj = [];\n\n  predictions.forEach(prediction => {\n    var imageObj = {\n      'x': prediction.bbox[0],\n      'y': prediction.bbox[1],\n      'width': prediction.bbox[2],\n      'height': prediction.bbox[3],\n      'text': getLabelText(prediction)\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = 600;\n    canvas.height = 450;\n    var ctx = canvas.getContext('2d');\n    //draw image to canvas. scale to target dimensions\n    ctx.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    var imageData = ctx.getImageData(imageObj.x, imageObj.y, imageObj.width, imageObj.height);\n    var canvas1 = document.createElement(\"canvas\");\n    canvas1.width = imageObj.width;\n    canvas1.height = imageObj.height;\n    var ctx1 = canvas1.getContext(\"2d\");\n    ctx1.rect(0, 0, imageObj.width, imageObj.height);\n    ctx1.fillStyle = 'white';\n    ctx1.fill();\n    ctx1.putImageData(imageData, 0, 0);\n    //convert to desired file format\n    var dataURI = canvas1.toDataURL('image/jpeg'); // can also use 'image/png'\n    console.log(dataURI);\n    if (String(imageObj.text).split(',')[0] == 'Face') {\n      var div = document.getElementById('photoDiv');\n      var oldpic = div.firstChild;\n      if (oldpic) {\n        oldpic.replaceWith(canvas1);\n      }\n      else {\n        div.appendChild(canvas1);\n      }\n    }\n\n    obj.push(imageObj);\n    trig(dataURI, String(imageObj.text).split(',')[0]);\n  })\n\n  //trig(obj);\n\n}\n\nconst detectFrame = async (model, videoRef, canvasRef, trig) => {\n  const predictions = await model.detect(videoRef.current)\n  //console.log(videoRef);\n  renderPredictions(predictions, canvasRef, videoRef, trig)\n  requestAnimationFrame(() => {\n    detectFrame(model, videoRef, canvasRef, trig)\n  })\n}\n\nconst useBoxRenderer = (model, videoRef, canvasRef, shouldRender, trig) => {\n  useEffect(() => {\n    if (model && shouldRender) {\n      detectFrame(model, videoRef, canvasRef, trig)\n    }\n  }, [canvasRef, model, shouldRender, videoRef])\n}\n\nexport default useBoxRenderer\n"]},"metadata":{},"sourceType":"module"}